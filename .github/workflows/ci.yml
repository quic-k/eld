name: CI

on:
  push: # trigger CI on push to main and release branches
    branches:
      - main
      - release/21.x
  workflow_dispatch: # allows manual trigger from github UI
  pull_request:
    paths-ignore:
      - '.github/workflows/sanitize.yml'
      - '.github/workflows/reviter.yml'
      - '.github/workflows/qualcomm-organization-repolinter.yml'
      - '.github/workflows/docs.yaml'
      - '.github/workflows/ci-win.yml'
      - '.github/workflows/picolibc-builder.yml'
      - '.github/workflows/nightly-test.yml'

jobs:
  build:
    runs-on: self-hosted
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    permissions:
      contents: write
      statuses: write

    env:
      PR_NUMBER: ${{ github.event.number }}
      BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
      BASE_BRANCH_NAME: ${{ github.event.pull_request.base.ref }}
      CCACHE_DIR: /local/mnt/workspace/ccache/${{ github.event.pull_request.base.ref }}
      CCACHE_BASEDIR: ${{ github.workspace }}/pr-${{ github.event.number }}

    steps:
      - name: Checkout llvm-project
        uses: actions/checkout@v4
        with:
          repository: llvm/llvm-project
          ref: ${{ env.BASE_BRANCH_NAME }}
          path: pr-${{ env.PR_NUMBER }}/llvm-project

      - name: Checkout qualcomm/eld PR branch
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          path: pr-${{ env.PR_NUMBER }}/llvm-project/llvm/tools/eld
          fetch-depth: 0

      - name: Check for non-doc changes
        id: file-check
        working-directory: pr-${{ env.PR_NUMBER }}/llvm-project/llvm/tools/eld
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          echo "Changed files: $CHANGED_FILES"
          for file in $CHANGED_FILES; do
            if [[ ! "$file" =~ ^docs/ && ! "$file" =~ \.md$ ]]; then
              echo "skip_build=false" >> "$GITHUB_OUTPUT"
              exit 0
            fi
          done
          echo "Only docs changed. Skipping build."
          echo "skip_build=true" >> "$GITHUB_OUTPUT"

      - name: Run CMake
        if: steps.file-check.outputs.skip_build == 'false'
        working-directory: pr-${{ env.PR_NUMBER }}
        run: |
          mkdir -p "$CCACHE_DIR"
          ccache --zero-stats
          ccache --set-config "max_size=50GB" "compression=true"
          ccache --show-config

          rm -rf obj
          mkdir -p obj
          cd obj
          cmake -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLVM_ENABLE_PROJECTS="llvm;clang;clang-tools-extra" \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DLLVM_ENABLE_ASSERTIONS:BOOL=ON \
            -DCMAKE_INSTALL_RPATH:STRING="$ORIGIN/../lib" \
            -DCMAKE_C_COMPILER="$(which clang)" \
            -DCMAKE_CXX_COMPILER="$(which clang++)" \
            -DCMAKE_CXX_FLAGS="-stdlib=libc++" \
            -DLLVM_TARGETS_TO_BUILD="ARM;AArch64;RISCV;Hexagon;X86" \
            -DELD_TARGETS_TO_BUILD="ARM;AArch64;RISCV;Hexagon;x86_64" \
            -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON \
            ../llvm-project/llvm

      - name: Cache Usage before build
        if: steps.file-check.outputs.skip_build == 'false'
        working-directory: pr-${{ env.PR_NUMBER }}/obj
        run: ccache --show-stats --dir=$CCACHE_DIR

      - name: Build
        if: steps.file-check.outputs.skip_build == 'false'
        working-directory: pr-${{ env.PR_NUMBER }}/obj
        run: ninja

      - name: Cache usage after build
        if: steps.file-check.outputs.skip_build == 'false'
        working-directory: pr-${{ env.PR_NUMBER }}/obj
        run: ccache --show-stats --dir=$CCACHE_DIR

      - name: Run tests
        if: steps.file-check.outputs.skip_build == 'false'
        working-directory: pr-${{ env.PR_NUMBER }}/obj
        run: ninja check-eld

      - name: Clean up
        if: always()
        run: |
          rm -rf "pr-${{ env.PR_NUMBER }}"
